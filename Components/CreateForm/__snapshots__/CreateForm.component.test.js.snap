// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateForm renders without crashing 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "transparent",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#3F51B5",
        "flexDirection": "row",
        "height": 90,
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontSize": 22,
          "marginLeft": 20,
        }
      }
    >
       Create Form 
    </Text>
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "white",
            "fontSize": 40,
          },
          Object {
            "marginLeft": "auto",
          },
          Object {
            "fontFamily": "Entypo",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      ï†‚
    </Text>
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "flexGrow": 1,
        "paddingTop": 30,
        "width": "100%",
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "width": "85%",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          maxLength={250}
          multiline={true}
          onChangeText={[Function]}
          placeholder="Form Name"
          selectionColor="black"
          style={
            Object {
              "borderBottomWidth": 1,
              "borderColor": "grey",
              "fontSize": 20,
              "marginBottom": 10,
            }
          }
          testID="formName"
          underlineColorAndroid="transparent"
        />
        <Text>
          
        </Text>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "flex-end",
              "backgroundColor": "#3F51B5",
              "marginTop": 10,
              "opacity": 1,
              "paddingVertical": 10,
              "width": 120,
            }
          }
          testID="addFieldButton"
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontSize": 18,
              }
            }
          >
            ADD FIELD
          </Text>
        </View>
        <View
          style={
            Object {
              "paddingVertical": 20,
            }
          }
          testID="fieldsView"
        />
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#3F51B5",
            "bottom": 0,
            "height": 70,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "width": "100%",
          }
        }
        testID="submitButton"
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 18,
            }
          }
        >
          SAVE
        </Text>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
